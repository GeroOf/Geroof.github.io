{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2023-02-21-post/","result":{"data":{"site":{"siteMetadata":{"title":"GeroOf MyPage"}},"markdownRemark":{"id":"2172ce35-d342-56bd-9de7-38eadf151513","excerpt":"抽象化とユニットテストと継続的インテグレーションを使っていっぱい実験するのが大事って話ですね","html":"<iframe sandbox=\"allow-popups allow-scripts allow-modals allow-forms allow-same-origin\" style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=gyokojp-22&language=ja_JP&o=9&p=8&l=as4&m=amazon&f=ifr&ref=as_ss_li_til&asins=4296070363&linkId=0bdd44985def95eac03ef94a99fc234b\"></iframe>\n<p>抽象化とユニットテストと継続的インテグレーションを使っていっぱい実験するのが大事って話ですね</p>","frontmatter":{"title":"継続的デリバリーのソフトウェア工学　もっと早く、もっと良いソフトウェアを作るための秘訣","date":"2023/02/21","description":null}},"previous":{"fields":{"slug":"/posts/2023-01-03-post/"},"frontmatter":{"title":"プロジェクトマネジメント標準PMBOK入門: (PMBOK第7版対応版)"}},"next":{"fields":{"slug":"/about/"},"frontmatter":{"title":"GeroOf MyPage About"}}},"pageContext":{"id":"2172ce35-d342-56bd-9de7-38eadf151513","previousPostId":"9ac633f1-7d00-5549-bd13-a33d8e93abe1","nextPostId":"b9477288-703d-5e56-86f9-a69b2a2eccdc"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}