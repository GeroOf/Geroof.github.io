{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/2020-09-12-post/","result":{"data":{"site":{"siteMetadata":{"title":"GeroOf MyPage"}},"markdownRemark":{"id":"d79bbd53-658a-5243-89b4-bba79b87fcf7","excerpt":"Code Complete…","html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 200%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <iframe style=\"width:120px;height:240px; position: absolute; top: 0; left: 0; width: 100%; height: 100%; \" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=gyokojp-22&amp;language=ja_JP&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=as_ss_li_til&amp;asins=4822286584&amp;linkId=f0f7f3853c5ae72f05ed703926aff023\"></iframe> </div>\n<ul>\n<li>Code Completeの作者の書籍</li>\n<li>スクラムを中心としてアジャイル開発に関して記載</li>\n<li>ターゲットはリーダー・マネージャ</li>\n<li>入りはスクラムガイド通りにまずはやる。カスタマイズはあと</li>\n<li>アジャイル一辺倒ではなくお役所や品質管理プロセスが厳しい相手の場合は、ウォーターフォールのやり方(要求分析、要件定義の入りまで)を混ぜる</li>\n<li>個人にフォーカスを当てずにチームで解決</li>\n<li>マイクロマネジメントをしない(ブラックボックスにしておく)</li>\n<li>バーティカルスライスで対応</li>\n<li>ユニットテスト/CI/CDは機能させておくこと</li>\n</ul>","frontmatter":{"title":"More Effective Agile 〜 ソフトウェアリーダーになるための28の道標","date":"2020/09/12","description":null}},"previous":{"fields":{"slug":"/gatsby/"},"frontmatter":{"title":"gatsby入門メモ"}},"next":{"fields":{"slug":"/posts/2020-10-10-post/"},"frontmatter":{"title":"オブジェクト指向UIデザイン──使いやすいソフトウェアの原理"}}},"pageContext":{"id":"d79bbd53-658a-5243-89b4-bba79b87fcf7","previousPostId":"ac707332-4c17-56f0-8716-324fb23e10f6","nextPostId":"89d433c5-97e1-59d0-a807-7c47b9051d1f"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}