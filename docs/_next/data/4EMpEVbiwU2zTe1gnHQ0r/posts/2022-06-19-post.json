{"pageProps":{"post":{"title":"システム運用アンチパターン","date":"2022-06-19","slug":"2022-06-19-post","author":{"name":"GeroOf","picture":"/assets/blog/authors/geroof.png"},"content":"<iframe sandbox=\"allow-popups allow-scripts allow-modals allow-forms allow-same-origin\" style=\"width:120px;height:240px;\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\" frameborder=\"0\" src=\"//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=gyokojp-22&language=ja_JP&o=9&p=8&l=as4&m=amazon&f=ifr&ref=as_ss_li_til&asins=4873119847&linkId=2d0197d7763fca2bae51161ef12f1132\"></iframe>\n<p>メモ</p>\n<ol>\n<li>DevOpsを構成するもの：DevOpsはソフトウェア開発の考え方を他の役割(ここでは運用)に適用する手法。ライフサイクルに関わる全てのチームに責任を共有。CAMS(文化：culture,自動化：automation,メトリクス：metrics,共有：sharing)によって成り立っている</li>\n<li>パターナリスト症候群：不要なゲートキーパーや承認プロセスを自動化しよう</li>\n<li>盲目状態での運用：メトリクスを取ろう／ログを記録しよう／ログレベルは適切に</li>\n<li>情報ではなくデータ：利用者のことを考えてダッシュボードを設計</li>\n<li>最後の味付けとしての品質：テストを論理的にグループ化／継続的デリバリにより常にリリース可能な状態に</li>\n<li>アラート疲れ：ノイズの多いアラートは割れ窓になるので再設計を／オンコールは作業者の精神を蝕むので適切な制度設計を</li>\n<li>空の道具箱：手動作業にはまずノーを／自動化、手動の工数コストを算出し比較／みんなが自動化の当事者になる</li>\n<li>業務時間外のデプロイ： デプロイ頻度を増やし、1度のデプロイでのアーティファクトサイズを小さくすることにより、デプロイの失敗に対する恐怖を和らげる</li>\n<li>せっかくのインシデントを無駄にする：ポストモーテム時は非難しない(人にフォーカスを当てない)、メンタルモデルのずれを認識すること、改善のためのアクションをいつまでに誰がやるかを決める</li>\n<li>情報のため込み：ブレンドだけが知っている：意図しない情報のため込みをどう防ぐか、ゲートキーパーにならないようにする、コミュニケーション時に共通の辞書(用語)を使う、包括的なドキュメントを無理して作ろうとしない</li>\n<li>命じられた文化：文化規範に従った行動がなされないといけない、習慣を作る、文化に合った人材を採用する(ブリリアントジャークはお断り)、シニアエンジニアを雇うときはその企業にとってのシニアとは何かを定義して行うこと</li>\n<li>多すぎる尺度：優先度を決める、緊急度と重要度を算出する、引き受けて放置するくらいなら断れ</li>\n</ol>","ogImage":{"url":"/assets/blog/authors/geroof.png"}}},"__N_SSG":true}